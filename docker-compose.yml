services:
  VideoProcessingService:
    image: ghcr.io/maxaizer/video-processing-service:latest
    build:
      context: .
      dockerfile: src/VideoProcessingService/VideoProcessingService.App/Dockerfile
    environment:
      RabbitMQ:Host: rabbitmq
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    deploy:
      replicas: 1
  
  CoreService:
    image: ghcr.io/maxaizer/video-core-service:latest
    build:
      context: .
      dockerfile: src/CoreService/CoreService.Api/Dockerfile
    environment:
      MinIO:PublicHost: ${SERVER_IP}/storage
      RabbitMQ:Host: rabbitmq
      SECRET: dont_steal_my_super_secret_key_please
      ASPNETCORE_Kestrel__Certificates__Default__Path: /https/aspnetapp.pfx
      ASPNETCORE_Kestrel__Certificates__Default__Password: qwerty
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    ports:
      - "127.0.0.1:8080:8080"
      - "127.0.0.1:8081:8081"
    volumes:
      - ./.aspnet/https:/https:ro
 
  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    ports:
      - "127.0.0.1:9000:9000"
      - "127.0.0.1:9001:9001"
    command: server --console-address ":9001" /data

  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: video_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:latest
    ports:
      - "443:443"
      - "80:80"
    depends_on:
      - minio
      - CoreService
    entrypoint: /bin/sh -c "chmod 777 /etc/nginx/convert-pfx.sh && /etc/nginx/convert-pfx.sh"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./.aspnet/https:/https:ro
      - ./convert-pfx.sh:/etc/nginx/convert-pfx.sh
  
  rabbitmq:
    image: rabbitmq:3.13-management
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: rabbitmq
    ports:
      - "127.0.0.1:15672:15672"
      - "127.0.0.1:5672:5672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: [ "CMD-SHELL", "rabbitmq-diagnostics ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  minio_data:
  pg_data:
  rabbitmq_data: