name: CI Pipeline

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.md'

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:20.10.7
        options: --privileged

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Set up docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to docker hub with GitHub PAT
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    #- name: Install docker compose
     # run: |
     #   COMPOSE_VERSION=$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep 'tag_name' | cut -d\" -f4)
     #   sudo curl -L "https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
     #   sudo chmod +x /usr/local/bin/docker-compose

    - name: Run tests
      env:
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
      run: |
        dotnet test VideoService.sln

    - name: Create log directories
      run: |
        mkdir -p /home/runner/work/VideoService/VideoService/tests/CoreService.IntegrationTests/bin/Debug/net8.0/logs
        mkdir -p /home/runner/work/VideoService/VideoService/tests/VideoProcessingService.IntegrationTests/bin/Debug/net8.0/logs

    - name: Upload logs
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: logs
        path: |
          /home/runner/work/VideoService/VideoService/tests/CoreService.IntegrationTests/bin/Debug/net8.0/logs/*.txt
          /home/runner/work/VideoService/VideoService/tests/VideoProcessingService.IntegrationTests/bin/Debug/net8.0/logs/*.txt

    - name: Detect paths of changed files
      uses: dorny/paths-filter@v3
      id: changes
      with:
        filters: |
          src:
            - 'src/**'

    - name: Set lowercase docker image prefix
      if: success()
      run: echo "PREFIX_LC=${PREFIX,,}" >> ${GITHUB_ENV}
      env:
        PREFIX: '${{ github.repository_owner }}'

    - name: Build and push CoreService docker image
      if: success() && steps.changes.outputs.src == 'true'
      id: build_core_image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: src/CoreService/CoreService.Api/Dockerfile
        tags: ghcr.io/${{ env.PREFIX_LC }}/video-core-service:latest
        push: true

    - name: Build and push VideoProcessingService docker image
      if: success() && steps.changes.outputs.src == 'true'
      id: build_vps_image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: src/VideoProcessingService/VideoProcessingService.App/Dockerfile
        tags: ghcr.io/${{ env.PREFIX_LC }}/video-processing-service:latest
        push: true

   # - name: Start docker compose
   #   run: |
   #     docker-compose up -d

   # - name: Wait for services to be healthy
  #    run: |
   #     sleep 60

    #- name: Run Postman E2E tests
    #  run: |
    #    newman run postman/collection.json

   # - name: Stop Docker Compose services
   #   if: always()
   #   run: |
   #     docker-compose -f docker-compose.yml down

   # - name: Push CoreService Docker image (after tests pass)
   #   if: success()
   #   uses: docker/build-push-action@v6
   #   with:
   #     context: .
   #     file: src/CoreService/CoreService.Api/Dockerfile
   #     tags: ghcr.io/${{ github.repository_owner }}/video-core-service:latest
   #     push: true

   # - name: Push VideoProcessingService Docker image (after tests pass)
   #   if: success()
   #   uses: docker/build-push-action@v6
   #   with:
   #     context: .
   #     file: src/VideoProcessingService/VideoProcessingService.App/Dockerfile
   #     tags: ghcr.io/${{ github.repository_owner }}/video-processing-service:latest
   #     push: true
